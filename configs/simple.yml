# Configuration preset for map2lp.py and scen2lp.py
# Results in a "binary" map with a node on exactly every tile without movement restrictions
# and no other literals,
# and scenarios comprising <parameter>(<value>,<index>) - statements.

# Dictionary to translate symbols found in original map.
# Format: <character>: <List of object predicates to generate>
# Example: "T": ["node", "tree"] translates every "T" as two separate init-statements one for a node and one for a tree.
"term_dict":
  ".":
    - "node"
  "G":
    - "node"

# List of ignored symbols in original file when converting:
"ignore_list":
  - "@"
  - "O"
  - "W"
  - "T"
  - "S"

# Template for logic statements in output file:
"statement_template": "init(object({},{}),value(at,({},{}))).\n"

# Dictionary to translate parameters in .scen-files to statements.
"param_dict":

  "bucket": ~

  "map": "map(\"{}\",{index}).\n"

  "map_width": "map_width({},{index}).\n"

  "map_height": "map_height({},{index}).\n"

  "start_x": "start_x({},{index}).\n"

  "start_y": "start_y({},{index}).\n"

  "goal_x": "goal_x({},{index}).\n"

  "goal_y": "goal_y({},{index}).\n"

  "optimal_length": ~